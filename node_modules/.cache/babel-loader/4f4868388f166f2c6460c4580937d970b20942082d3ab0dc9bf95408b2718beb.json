{"ast":null,"code":"import { collection, addDoc, updateDoc, doc, runTransaction } from \"firebase/firestore\";\nimport { auth, db } from \"./config\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nexport async function save(data, sessionId) {\n  try {\n    const docRef = doc(db, 'session', sessionId);\n    await updateDoc(docRef, {\n      players: data // Update the players field with the new data\n    });\n    return true; // Return true if update is successful\n  } catch (error) {\n    console.error(\"Error updating document: \", error);\n    return false; // Return false if update fails\n  }\n}\nexport async function save2(playerName, sessionId) {\n  try {\n    const docRef = doc(db, 'session', sessionId);\n    await runTransaction(db, async transaction => {\n      const docSnapshot = await transaction.get(docRef);\n      const playersArray = docSnapshot.data().players || [];\n      const updatedPlayers = [...playersArray, playerName];\n      transaction.update(docRef, {\n        players: updatedPlayers\n      });\n    });\n    return true; // Return true if update is successful\n  } catch (error) {\n    console.error(\"Error updating document: \", error);\n    return false; // Return false if update fails\n  }\n}\nexport async function addSession(description, status, courtName, dateTime, orgName, user) {\n  try {\n    const docRef = await addDoc(collection(db, 'session'), {\n      description: description,\n      status: status,\n      courtName: courtName,\n      dateTime: dateTime,\n      orgName: orgName,\n      uid: user.uid // Include uid when adding session\n    });\n    return docRef.id; // Return the document ID\n  } catch (error) {\n    console.error(\"Error adding session: \", error);\n    return null;\n  }\n}\nexport const registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};","map":{"version":3,"names":["collection","addDoc","updateDoc","doc","runTransaction","auth","db","createUserWithEmailAndPassword","save","data","sessionId","docRef","players","error","console","save2","playerName","transaction","docSnapshot","get","playersArray","updatedPlayers","update","addSession","description","status","courtName","dateTime","orgName","user","uid","id","registerWithEmailAndPassword","name","email","password","res","authProvider","err","alert","message"],"sources":["C:/Users/vsvil/OneDrive/FANSHAWE FILES/Winter 2024/FullStack/VivaArroyo-LocalRepo1/pickleplayApp/src/database/write.js"],"sourcesContent":["import { collection, addDoc, updateDoc, doc, runTransaction } from \"firebase/firestore\";\r\nimport { auth, db } from \"./config\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nexport async function save(data, sessionId) {\r\n    try {\r\n        const docRef = doc(db, 'session', sessionId);\r\n        await updateDoc(docRef, {\r\n            players: data // Update the players field with the new data\r\n        });\r\n        return true; // Return true if update is successful\r\n    } catch (error) {\r\n        console.error(\"Error updating document: \", error);\r\n        return false; // Return false if update fails\r\n    }\r\n}\r\n\r\n\r\nexport async function save2(playerName, sessionId) {\r\n    try {\r\n        const docRef = doc(db, 'session', sessionId);\r\n\r\n        await runTransaction(db, async (transaction) => {\r\n            const docSnapshot = await transaction.get(docRef);\r\n            const playersArray = docSnapshot.data().players || [];\r\n            const updatedPlayers = [...playersArray, playerName];\r\n\r\n            transaction.update(docRef, { players: updatedPlayers });\r\n        });\r\n\r\n        return true; // Return true if update is successful\r\n    } catch (error) {\r\n        console.error(\"Error updating document: \", error);\r\n        return false; // Return false if update fails\r\n    }\r\n}\r\n\r\n\r\nexport async function addSession(description, status, courtName, dateTime, orgName, user) {\r\n    try {\r\n        const docRef = await addDoc(collection(db, 'session'), {\r\n            description: description,\r\n            status: status,\r\n            courtName: courtName,\r\n            dateTime: dateTime,\r\n            orgName: orgName,\r\n            uid: user.uid // Include uid when adding session\r\n        });\r\n        return docRef.id; // Return the document ID\r\n    } catch (error) {\r\n        console.error(\"Error adding session: \", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nexport const registerWithEmailAndPassword = async (name, email, password) => {\r\n    try {\r\n        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n        const user = res.user;\r\n        await addDoc(collection(db, \"users\"), {\r\n            uid: user.uid,\r\n            name,\r\n            authProvider: \"local\",\r\n            email,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}